#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ Cette\ classe\ est\ le\ moteur\ du\ jeu\ qui\ cr\u00E9e\ toutes\ les\ pi\u00E8ces,\ affiche\ les\ messages,\r\n\ et\ fait\ tourner\ le\ jeu.\r\n\ Elle\ \u00E9value\ et\ execute\ \u00E9galement\ les\ commandes\ que\ le\ parser\ retourne.\r\n\ \r\n\ @Cl\u00E9ment\ Sainte-Rose\r\n
comment1.params=
comment1.target=GameEngine()
comment1.text=\r\n\ Constructeur\ par\ d\u00E9faut\ qui\ initialise\ l'objet\ Parser,\ cr\u00E9e\ une\ HashMap\ pour\ stocker\ les\ pi\u00E8ces\ et\ appelle\ la\ m\u00E9thode\ createRooms()\ pour\ cr\u00E9er\ les\ pi\u00E8ces.\r\n
comment10.params=pCommand
comment10.target=void\ back(Command)
comment10.text=\r\n\ Cette\ proc\u00E9dure\ permet\ de\ revenir\ dans\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente.\r\n
comment11.params=pCommand
comment11.target=void\ look(Command)
comment11.text=\r\n\ Cette\ proc\u00E9dure\ affiche\ les\ informations\ sur\ la\ pi\u00E8ce\ actuelle.\r\n
comment12.params=pCommand
comment12.target=void\ eat(Command)
comment12.text=\r\n\ Cette\ proc\u00E9dure\ permet\ au\ joueur\ de\ manger\ un\ objet\ s'il\ y\ en\ a\ un\ disponible.\r\n
comment13.params=pCommand
comment13.target=void\ test(Command)
comment13.text=\r\n\ Cette\ proc\u00E9dure\ v\u00E9rifie\ si\ la\ commande\ a\ un\ deuxi\u00E8me\ mot\r\n
comment14.params=pCommand
comment14.target=void\ take(Command)
comment14.text=\r\n\ Cette\ proc\u00E9dure\ permet\ au\ joueur\ de\ prendre\ un\ objet\ pr\u00E9sent\ dans\ la\ pi\u00E8ce\ \:\r\n\ S'il\ est\ pr\u00E9sent\ dans\ la\ liste\ des\ objets\ de\ la\ pi\u00E8ce,\ \r\n\ S'il\ est\ assez\ l\u00E9ger\ pour\ \u00EAtre\ ajout\u00E9\ \u00E0\ l'inventaire\ du\ joueur,\ \r\n\ Et\ s'il\ a\ \u00E9t\u00E9\ mentionn\u00E9\ dans\ la\ commande.\r\n
comment15.params=pCommand
comment15.target=void\ drop(Command)
comment15.text=\r\n\ Cette\ proc\u00E9dure\ \ permet\ au\ joueur\ de\ d\u00E9poser\ un\ objet\ de\ son\ inventaire\ dans\ la\ pi\u00E8ce\ \:\r\n\ S'il\ est\ pr\u00E9sent\ dans\ la\ liste\ des\ objets\ de\ l'inventaire,\r\n\ Et\ s'il\ a\ \u00E9t\u00E9\ mentionn\u00E9\ dans\ la\ commande.\r\n
comment16.params=pCommand
comment16.target=void\ inventory(Command)
comment16.text=\r\n\ Cette\ proc\u00E9dure\ affiche\ simplement\ le\ contenu\ de\ l'inventaire\ du\ joueur,\ \r\n\ Ainsi\ que\ son\ poids\ total\ et\ le\ poids\ maximal\ autoris\u00E9.\r\n
comment17.params=pCommand
comment17.target=void\ charge(Command)
comment17.text=\r\n\ Proc\u00E9dure\ permet\ de\ charger\ un\ objet\ "Beamer"\ \:\r\n\ S'il\ est\ pr\u00E9sent\ dans\ l'inventaire\ du\ joueur,\r\n\ S'il\ n'est\ pas\ d\u00E9j\u00E0\ charg\u00E9\ et\ s'il\ a\ \u00E9t\u00E9\ mentionn\u00E9\ dans\ la\ commande.\r\n
comment18.params=pCommand
comment18.target=void\ fire(Command)
comment18.text=\r\n\ Cette\ proc\u00E9dure\ permet\ au\ joueur\ d'utiliser\ le\ "Beamer"\ \:\r\n\ S'il\ est\ pr\u00E9sent\ dans\ l'inventaire,\ \r\n\ S'il\ est\ charg\u00E9\ et\ s'il\ a\ \u00E9t\u00E9\ mentionn\u00E9\ dans\ la\ commande.\r\n
comment19.params=
comment19.target=void\ timerEnd()
comment19.text=\r\n\ Cette\ proc\u00E9dure\ est\ appel\u00E9e\ \u00E0\ chaque\ fois\ que\ le\ timer\ atteint\ z\u00E9ro.\ \r\n\ Elle\ v\u00E9rifie\ si\ le\ nombre\ de\ mouvements\ restants\ du\ joueur\ est\ \u00E9gal\ \u00E0\ z\u00E9ro,\r\n\ Ce\ qui\ signifie\ que\ le\ joueur\ n'a\ pas\ r\u00E9ussi\ \u00E0\ sauver\ la\ princesse\ avant\ le\ retour\ du\ dragon;\r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ Cette\ proc\u00E9dure\ cr\u00E9e\ une\ interface\ utilisateur\ et\ appelle\ la\ m\u00E9thode\ printWelcome()\ pour\ afficher\ un\ message\ de\ bienvenue.\r\n
comment20.params=
comment20.target=void\ endGame()
comment20.text=\r\n\ Cette\ proc\u00E9dure\ permet\ d'arr\u00EAter\ le\ jeu.\r\n
comment3.params=
comment3.target=void\ printWelcome()
comment3.text=\r\n\ Cette\ proc\u00E9dure\ affiche\ un\ message\ de\ bienvenue,\ le\ nombre\ de\ mouvements\ restants\ du\ joueur\ et\ quelques\ conseils.\ \r\n\ Elle\ appelle\ \u00E9galement\ la\ m\u00E9thode\ printLocationInfo()\ pour\ afficher\ les\ informations\ sur\ la\ pi\u00E8ce\ actuelle.\r\n
comment4.params=
comment4.target=void\ printLocationInfo()
comment4.text=\r\n\ Cette\ proc\u00E9dure\ affiche\ la\ description\ de\ la\ pi\u00E8ce\ actuelle\ et\ affiche\ l'image\ correspondante\ s'il\ y\ en\ a\ une.\r\n
comment5.params=
comment5.target=void\ createRooms()
comment5.text=\r\n\ Proc\u00E9dure\ qui\ cr\u00E9e\ les\ pi\u00E8ces\ du\ jeu,\ les\ stocke\ dans\ une\ Hashmap,\ cr\u00E9e\ les\ items\ du\ jeu\ et\ les\ r\u00E9parti\ dans\ les\ pi\u00E8ces\r\n
comment6.params=pStringCommand
comment6.target=void\ interpretCommand(java.lang.String)
comment6.text=\r\n\ Cette\ proc\u00E9dure\ transforme\ et\ analyse\ la\ commande\ de\ l'utilisateur.\r\n
comment7.params=pRoom
comment7.target=Room\ getRoom(java.lang.String)
comment7.text=\r\n\ Cette\ m\u00E9thode\ permet\ d'acc\u00E9der\ au\ nom\ de\ la\ pi\u00E8ce.\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ Proc\u00E9dure\ d'aide\ qui\ affiche\ les\ mots\ de\ commande\ disponibles\r\n
comment9.params=pCommand
comment9.target=void\ goRoom(Command)
comment9.text=\r\n\ Cette\ proc\u00E9dure\ permet\ au\ joueur\ de\ se\ d\u00E9placer\ d'une\ pi\u00E8ce\ \u00E0\ une\ autre\ en\ fonction\ de\ la\ commande\ entr\u00E9e.\r\n
numComments=21
